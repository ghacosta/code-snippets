{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "reduxreducer",
		"body": [
			"import * as actionTypes from './actionTypes';",
			"",
			"export const initialState = {",
			"  something: [],",
			"  error: {},",
			"  loading: false,",
			"  page: 1,",
			"  pageInfo: {",
			"    lastPage: 0,",
			"    total: 0,",
			"    perPage: 0,",
			"  },",
			"};",
			"",
			"export default function (state = initialState, { type, payload }) {",
			"  switch (type) {",
			"    case actionTypes.GET_SOMETHING:",
			"      return { ...state, loading: true };",
			"    case actionTypes.GET_SOMETHING_SUCCESS: {",
			"      const { page, data: something, ...pageInfo } = payload;",
			"      return {",
			"        ...state,",
			"        loading: false,",
			"        error: {},",
			"        something,",
			"        page,",
			"        pageInfo,",
			"      };",
			"    }",
			"    case actionTypes.GET_SOMETHING_FAILED:",
			"      return { ...state, loading: false, error: payload };",
			"    case actionTypes.POST_SOMETHING:",
			"      return { ...state, loading: true, error: {} };",
			"    case actionTypes.POST_SOMETHING_SUCCESS:",
			"      return { ...state, loading: false, error: {} };",
			"    case actionTypes.POST_SOMETHING_FAILED:",
			"      return { ...state, loading: false, error: payload };",
			"    default:",
			"      return state;",
			"  }",
			"}",
			"",
		],
		"description": "Log output to console"
	}
}